/**
 * 通过是否需要发送http请求来分类：
 * 
 * 1.强缓存。服务器通知浏览器一个缓存时间，如果在时间之内，浏览器直接使用缓存
 * 2.协商缓存。浏览器将缓存信息（服务端返回的）中的etag和last-modified字段通过请求发给服务器，由服务器校验，如果命中缓存，服务端返回304，浏览器就使用缓存，否则返回最新内容。
 */


/**
 * 控制强缓存有两个字段：cache-control 和 expires
 * 
 * cache-control：优先级更高，是一个相对时间，表示浏览器自上次请求正确资源后的多少秒的时间段内有效
 * 
 * expires：是一个绝对时间，表示在这个时间点以前浏览器都可以使用缓存，但是有一个缺点，浏览器端手动更改时间会导致缓存判断错误，又或者即使不考虑手动修改时间，由于时差或者误差等因素浏览器与服务端时间不一致导致缓存判断错误，cache-control的出现正是为了解决这个问题
 * 
 */

/**
 * 协商缓存由两组字段控制：last-modified（服务器资源最后的一次修改时间）/if-modified-since  和 etag（服务器资源的唯一标识）/if-none-match 后组优先级更高
 * 
 * 1.服务器通过 Last-Modified 字段告知客户端，资源最后一次被修改的时间，例如 Last-Modified: Mon, 10 Nov 2018 09:10:11 GMT
 * 2.浏览器将这个值和内容一起记录在缓存数据库中。
 * 3.下一次请求相同资源时，浏览器从自己的缓存中找出“不确定是否过期的”缓存。因此在请求头中将上次的 Last-Modified 的值写入到请求头的 If-Modified-Since 字段
 * 4.服务器会将 If-Modified-Since 的值与 Last-Modified 字段进行对比。如果相等，则表示未修改，响应 304；反之，则表示修改了，响应 200 状态码，并返回数据。
 * 
 */